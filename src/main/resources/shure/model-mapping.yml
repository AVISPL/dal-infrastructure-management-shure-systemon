models:
  - model:
      name: generic
      vendor: shure
      properties:
        FirmwareVersion: get("firmwareVersion")
        DeviceVersion: get("version")
      mapping:
        deviceType: Microphone
        deviceId: get("hardwareId")
        deviceName: get("name")
        deviceMake: Shure
        deviceModel: get("model")
        deviceOnline: "true"
        serialNumber: get("serialNumber")
        macAddresses: get("macAddress")
  - model:
      name: ANIUSB
      vendor: shure
      filter: get("model").asText().equals("ANIUSB")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("IsIdentifying")
        IpMode: get("IpMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("AccessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        ActivePresetIndex: get("activePresetIndex")
        InputMeteringMode: get("inputMeteringMode")
        OutputMeteringMode: get("outputMeteringMode")
        MuteLogic: get("logicMuteEnabled")
        Mute: get("deviceMute")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebooting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXW6
      vendor: shure
      filter: get("model").asText().equals("MXW6")
      properties:
        IsIdentifying: get("isIdentifying")
        IsRemoteDevice: get("isRemoteDevice")
        MicStatus: get("micStatus")
        MicGain: get("micGain")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryStatus: get("batteryStatus")
      statistics:
        BatteryPercentage: get("batteryPercentage")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
  - model:
      name: MXW8
      vendor: shure
      filter: get("model").asText().equals("MXW8")
      properties:
        IsIdentifying: get("isIdentifying")
        IsRemoteDevice: get("isRemoteDevice")
        MicStatus: get("micStatus")
        MicGain: get("micGain")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryStatus: get("batteryStatus")
      statistics:
        BatteryPercentage: get("batteryPercentage")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
  - model:
      name: MXWAPT2
      vendor: shure
      filter: get("model").asText().equals("MXWAPT2")
      properties:
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        GlobalMicStatus: get("globalMicStatus")
        Uptime: get("uptime")
  - model:
      name: MXWAPT4
      vendor: shure
      filter: get("model").asText().equals("MXWAPT4")
      properties:
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        GlobalMicStatus: get("globalMicStatus")
        Uptime: get("uptime")
  - model:
      name: MXWAPT8
      vendor: shure
      filter: get("model").asText().equals("MXWAPT8")
      properties:
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        GlobalMicStatus: get("globalMicStatus")
        Uptime: get("uptime")
  - model:
      name: MXWNCS2
      vendor: shure
      filter: get("model").asText().equals("MXWNCS2")
      properties:
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
  - model:
      name: MXWNCS4
      vendor: shure
      filter: get("model").asText().equals("MXWNCS4")
      properties:
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
  - model:
      name: MXWNCS8
      vendor: shure
      filter: get("model").asText().equals("MXWNCS8")
      properties:
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
  - model:
      name: IMX-Room
      vendor: shure
      filter: get("model").asText().equals("IMX-Room")
      properties:
        TpciServerEnable: get("tpciServerEnable")
        TpciServerPort: get("tpciServerPort")
        ImxChannelCount: get("imxChannelCount")
        ImxChannelCountSet: get("imxChannelCountSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        Mute: get("deviceMute")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        AnalyticsEnabled: get("analyticsEnabled")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXA310
      vendor: shure
      filter: get("model").asText().equals("MXA310")
      properties:
        ActivePresetIndex: get("activePresetIndex")
        LedDisplayAutomixGating: get("ledDisplayAutomixGating")
        LedFollowMuteColor: get("ledFollowMuteColor")
        LedStyleSetting: get("ledStyleSetting")
        HighPassFilter: get("highPassFilterEnable")
        BypassAllEq: get("bypassAllEq")
        MuteControlFunction: get("muteControlFunction")
        MuteButtonMode: get("muteButtonMode")
        ButtonDefaultsToMuted: get("buttonDefaultsToMuted")
        LogicOut: get("logicOut")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        Mute: get("deviceMute")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebooting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXA710-2FT
      vendor: shure
      filter: get("model").asText().equals("MXA710-2FT")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        Mute: get("deviceMute")
        UnitsOfMeasurement: get("unitsOfMeasurement")
        ActivePresetIndex: get("activePresetIndex")
        BypassAllEq: get("bypassAllEq")
        LobeConfiguration: get("lobeConfiguration")
        EqContour: get("eqContour")
        BypassIntellimix: get("bypassIntellimix")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebooting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXA710-4FT
      vendor: shure
      filter: get("model").asText().equals("MXA710-4FT")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        Mute: get("deviceMute")
        UnitsOfMeasurement: get("unitsOfMeasurement")
        ActivePresetIndex: get("activePresetIndex")
        BypassAllEq: get("bypassAllEq")
        LobeConfiguration: get("lobeConfiguration")
        EqContour: get("eqContour")
        BypassIntellimix: get("bypassIntellimix")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebootting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXA910
      vendor: shure
      filter: get("model").asText().equals("MXA910")
      properties:
        UnitsOfMeasurement: get("unitsOfMeasurement")
        EqContour: get("eqContour")
        BypassAllEq: get("bypassAllEq")
        ArrayHeight: get("arrayHeight")
        BypassIntellimix: get("bypassIntellimix")
        ActivePresetIndex: get("activePresetIndex")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        Mute: get("deviceMute")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebooting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: MXA-MUTE
      vendor: shure
      filter: get("model").asText().equals("MXA-MUTE")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        ActivePresetIndex: get("activePresetIndex")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        LedMuteBehavior: get("ledMuteSettings")?.get("ledBehavior")
        LedMuteColor: get("ledMuteSettings")?.get("ledColor")
        LedUnmuteBehavior: get("ledUnmuteSettings")?.get("ledBehavior")
        LedUnmuteColor: get("ledUnmuteSettings")?.get("ledColor")
        LedIn: get("ledIn")
        MuteLedCurrentColor: get("muteLedCurrentColor")
        MuteLedActive: get("muteLedActive")
        MuteLedCurrentMode: get("muteLedCurrentMode")
        Mute: get("deviceMute")
        MuteControlFunction: get("muteControlFunction")
        MuteButtonMode: get("muteButtonMode")
        ButtonDefaultsToMuted: get("buttonDefaultsToMuted")
        LogicOut: get("logicOut")
        AssociatedMuteGroupControlHardwareIds: get("associatedMuteGroupControlHardwareIds")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: P300
      vendor: shure
      filter: get("model").asText().equals("P300")
      properties:
        ActivePresetIndex: get("activePresetIndex")
        InputMeteringMode: get("inputMeteringMode")
        OutputMeteringMode: get("outputMeteringMode")
        LedEthernetEnabled: get("ethernetLedEnabled")
        LedBrightnessPercentage: get("ledBrightnessPercentage")
        PasswordSet: get("passwordSet")
        IsInitialPasswordSet: get("isInitialPasswordSet")
        DanteEncryption: get("danteEncryptionEnabled")
        DanteEncryptionPassphraseSet: get("danteEncryptionPassphraseSet")
        DanteDeviceNameConflict: get("danteDeviceNameConflict")
        DanteClockSyncError: get("danteClockSyncError")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
        Mute: get("deviceMute")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsRemoteDevice: get("isRemoteDevice")
        Reboot: Reboot
        Reset: Reset
      control:
        Mute:
          value: get("deviceMute")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        DanteEncryption:
          value: get("danteEncryptionEnabled")
          type: Switch
          labelOff: "Off"
          labelOn: "On"
        Reboot:
          type: Button
          label: Reboot
          labelPressed: Rebooting
          gracePeriod: 0
        Reset:
          type: Button
          label: Reset
          labelPressed: Resetting
          gracePeriod: 0
  - model:
      name: SBC220
      vendor: shure
      filter: get("model").asText().equals("SBC220")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsInStorageMode: get("isInStorageMode")
        DaisyChainLimitExceeded: get("daisyChainLimitExceeded")
  - model:
      name: SBC240
      vendor: shure
      filter: get("model").asText().equals("SBC240")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        IsInStorageMode: get("isInStorageMode")
        DaisyChainLimitExceeded: get("daisyChainLimitExceeded")
  - model:
      name: SBC250
      vendor: shure
      filter: get("model").asText().equals("SBC250")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
  - model:
      name: SBC450
      vendor: shure
      filter: get("model").asText().equals("SBC450")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
  - model:
      name: SBC850
      vendor: shure
      filter: get("model").asText().equals("SBC850")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
  - model:
      name: SCM820
      vendor: shure
      filter: get("model").asText().equals("SCM820")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        GlobalMuteStatus: get("mixMute")
        GlobalFrontPanelLockStatus: get("globalFrontPanelLock")
  - model:
      name: SCM820-DB25
      vendor: shure
      filter: get("model").asText().equals("SCM820-DB25")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        GlobalMuteStatus: get("mixMute")
        GlobalFrontPanelLockStatus: get("globalFrontPanelLock")
  - model:
      name: SCM820-DAN
      vendor: shure
      filter: get("model").asText().equals("SCM820-DAN")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        GlobalMuteStatus: get("mixMute")
        GlobalFrontPanelLockStatus: get("globalFrontPanelLock")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        RedundantDanteGateway: get("redundantDante")?.get("redundantGateway")
        RedundantDanteIpAddress: get("redundantDante")?.get("redundantIpAddress")
        RedundantDanteMacAddress: get("redundantDante")?.get("redundantMac")
        RedundantDanteIpMode: get("redundantDante")?.get("redundantIpMode")
        RedundantDanteSubnetMask: get("redundantDante")?.get("redundantSubnetMask")
        RedundantDanteConfig: get("redundantDante")?.get("config")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
  - model:
      name: SCM820-DAN-DB25
      vendor: shure
      filter: get("model").asText().equals("SCM820-DAN-DB25")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        GlobalMuteStatus: get("mixMute")
        GlobalFrontPanelLockStatus: get("globalFrontPanelLock")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        RedundantDanteGateway: get("redundantDante")?.get("redundantGateway")
        RedundantDanteIpAddress: get("redundantDante")?.get("redundantIpAddress")
        RedundantDanteMacAddress: get("redundantDante")?.get("redundantMac")
        RedundantDanteIpMode: get("redundantDante")?.get("redundantIpMode")
        RedundantDanteSubnetMask: get("redundantDante")?.get("redundantSubnetMask")
        RedundantDanteConfig: get("redundantDante")?.get("config")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
  - model:
      name: QLXD1
      vendor: shure
      filter: get("model").asText().equals("QLXD1")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
  - model:
      name: QLXD2
      vendor: shure
      filter: get("model").asText().equals("QLXD2")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
  - model:
      name: QLXD4
      vendor: shure
      filter: get("model").asText().equals("QLXD4")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        FrontPanelLock: get("frontPanelLock")
        PowerSwitchLock: get("powerSwitchLock")
        EncryptionMode: get("encryptionMode")
  - model:
      name: MXW1
      vendor: shure
      filter: get("model").asText().equals("MXW1")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        IsIdentifying: get("isIdentifying")
        MicrophoneMode: get("microphoneMode")
        MicrophoneSelection: get("microphoneSelection")
        InternalMicrophoneGain: get("internalMicrophoneGain")
  - model:
      name: MXW2
      vendor: shure
      filter: get("model").asText().equals("MXW2")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        IsIdentifying: get("isIdentifying")
  - model:
      name: ULXD1
      vendor: shure
      filter: get("model").asText().equals("ULXD1")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
        Muted: get("muted")
  - model:
      name: ULXD2
      vendor: shure
      filter: get("model").asText().equals("ULXD2")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
        Muted: get("muted")
  - model:
      name: ULXD4
      vendor: shure
      filter: get("model").asText().equals("ULXD4")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        FrontPanelLock: get("frontPanelLock")
        PowerSwitchLock: get("powerSwitchLock")
        EncryptionMode: get("encryptionMode")
        GlobalMuteStatus: get("globalMute")
        HighDensityMode: get("highDensityMode")
  - model:
      name: ULXD4D
      vendor: shure
      filter: get("model").asText().equals("ULXD4D")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        FrontPanelLock: get("frontPanelLock")
        PowerSwitchLock: get("powerSwitchLock")
        EncryptionMode: get("encryptionMode")
        GlobalMuteStatus: get("globalMute")
        HighDensityMode: get("highDensityMode")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        RedundantDanteGateway: get("redundantDante")?.get("redundantGateway")
        RedundantDanteIpAddress: get("redundantDante")?.get("redundantIpAddress")
        RedundantDanteMacAddress: get("redundantDante")?.get("redundantMac")
        RedundantDanteIpMode: get("redundantDante")?.get("redundantIpMode")
        RedundantDanteSubnetMask: get("redundantDante")?.get("redundantSubnetMask")
        RedundantDanteConfig: get("redundantDante")?.get("config")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
  - model:
      name: ULXD4Q
      vendor: shure
      filter: get("model").asText().equals("ULXD4Q")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        IsIdentifying: get("isIdentifying")
        IpMode: get("ipMode")
        IpAddress: get("currentIpAddress")
        IpNumber: get("currentIpNumber")
        SubnetMask: get("currentSubnetMask")
        Gateway: get("currentGateway")
        Uptime: get("uptime")
        AccessControlEnabled: get("accessControlEnabled")
        DeviceFactoryResetAllowed: get("deviceFactoryResetAllowed")
        FrontPanelLock: get("frontPanelLock")
        PowerSwitchLock: get("powerSwitchLock")
        EncryptionMode: get("encryptionMode")
        GlobalMuteStatus: get("globalMute")
        HighDensityMode: get("highDensityMode")
        DanteGateway: get("dante")?.get("gateway")
        DanteIpAddress: get("dante")?.get("ipAddress")
        DanteMacAddress: get("dante")?.get("mac")
        DanteIpMode: get("dante")?.get("ipMode")
        DanteSubnetMask: get("dante")?.get("subnetMask")
        DanteDeviceName: get("dante")?.get("deviceName")
        RedundantDanteGateway: get("redundantDante")?.get("redundantGateway")
        RedundantDanteIpAddress: get("redundantDante")?.get("redundantIpAddress")
        RedundantDanteMacAddress: get("redundantDante")?.get("redundantMac")
        RedundantDanteIpMode: get("redundantDante")?.get("redundantIpMode")
        RedundantDanteSubnetMask: get("redundantDante")?.get("redundantSubnetMask")
        RedundantDanteConfig: get("redundantDante")?.get("config")
        NetworkAudioChangesAllowed: get("networkAudioChangesAllowed")
  - model:
      name: ULXD6
      vendor: shure
      filter: get("model").asText().equals("ULXD6")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
        Muted: get("muted")
        IsIdentifying: get("isIdentifying")
  - model:
      name: ULXD8
      vendor: shure
      filter: get("model").asText().equals("ULXD8")
      properties:
        IsRemoteDevice: get("isRemoteDevice")
        OnAir: get("onAir")
        OnCharger: get("onCharger")
        HasShureBattery: get("hasShureBattery")
        MicStatus: get("micStatus")
        BatteryPercentage: get("batteryPercentage")
        BatteryCycleCount: get("batteryCycleCount")
        BatteryHealth: get("batteryHealth")
        BatteryMinutesRemaining: get("batteryMinutesRemaining")
        MicGain: get("micGain")
        BatteryStatus: get("batteryStatus")
        LockStatus: get("lockStatus")
        RfPower: get("rfPower")
        BatteryType: get("batteryType")
        Muted: get("muted")
        IsIdentifying: get("isIdentifying")
